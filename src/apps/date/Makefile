APP_NAME = $(shell basename `pwd`)
TARGET = $(APP_NAME:=.com)
SOURCE = $(shell ls *.c)
ASSEMBLY = $(SOURCE:.c=.s)
OBJECTS = $(ASSEMBLY:.s=.o)
MAP = $(APP_NAME:=.map)

# Compiler
COMPILER = gcc
COMPILER_CODE32_OPTION = -m32
COMPILER_DONT_LINK_OPTION = -c
COMPILER_DONT_USE_SSE_INSTRUCTION = -mno-sse -mno-sse2
COMPILER_DONT_USE_STDLIB_OPTION = -nostdlib
COMPILER_FNO_BUILTIN_OPTION = -fno-builtin
COMPILER_FNO_PIE_OPTION = -fno-pie
COMPILER_INCLUDE_DIRECTORY = ../../libs
COMPILER_INCLUDE_DIRECTORY_OPTION = -I
COMPILER_OUTPUT_ASSEMBLY_OPTION = -S
COMPILER_OUTPUT_OPTION = -o
COMPILER_WARNING_OPTION = -Wall -Wextra

# Linker
LINKER = ld
LINKER_I386_OPTION = -m elf_i386
LINKER_LIBRARY_DIRECTORY_OPTION = --library-path
LINKER_LIBRARY_DIRECTORY = ../../libs
LINKER_MAP_OPTION = -Map $(MAP)
LINKER_OUTPUT_OPTION = -o
LINKER_SCRIPT_OPTION = -T
LINKER_SCRIPT = $(APP_NAME:=.ld)

all: $(TARGET)

clean:
	rm -f $(ASSEMBLY) $(MAP) $(OBJECTS) $(TARGET)

rebuild: clean
	make

$(TARGET): $(OBJECTS)
	$(LINKER) $^ $(LINKER_LIBRARY_DIRECTORY_OPTION) $(LINKER_LIBRARY_DIRECTORY) $(LINKER_I386_OPTION) $(LINKER_MAP_OPTION) $(LINKER_OUTPUT_OPTION) $@ $(LINKER_SCRIPT_OPTION) $(LINKER_SCRIPT)

$(OBJECTS): $(@:.o=.s)

$(ASSEMBLY): $(@:.s=.c)

%.o: %.s
	$(COMPILER) $^ $(COMPILER_CODE32_OPTION) $(COMPILER_DONT_LINK_OPTION) $(COMPILER_DONT_USE_STDLIB_OPTION) $(COMPILER_OUTPUT_OPTION) $@ $(COMPILER_WARNING_OPTION)

%.s: %.c
	$(COMPILER) $^ $(COMPILER_CODE32_OPTION) $(COMPILER_DONT_USE_SSE_INSTRUCTION) $(COMPILER_FNO_BUILTIN_OPTION) $(COMPILER_FNO_PIE_OPTION) $(COMPILER_INCLUDE_DIRECTORY_OPTION)$(COMPILER_INCLUDE_DIRECTORY) $(COMPILER_OUTPUT_ASSEMBLY_OPTION) $(COMPILER_OUTPUT_OPTION) $@ $(COMPILER_WARNING_OPTION)

# Don't remove intermediate files
.PRECIOUS: %.com %.o %.s

